
<style>
 
  .concern-cover-2 {
    width: 290px;
    height: 520px;
    border: 2px solid #888;
    border-radius: 10px;
    margin-right: 5px;
  }

  .concern-cover-3 {
    width: 380px;
    height: 520px;
    border: 2px solid #888;
    border-radius: 10px;
    margin-right: 5px;
  }

  .concern-header {
    font-size: 16px;
    font-weight: bold;
    text-align: center;
    padding: 5px;
    border-bottom: 2px dotted #ccc;
  }

  .concern-body {
    margin: auto;
  }

  .alpha-cover {
    float: left;
    padding: 10px;
  }

  .alpha-title {
    text-align: center;
    height: 20px;
    font-size: 12px;
  }

  .alpha {
    height: 435px;
    padding-top: 45px;
    padding-bottom: 45px;
    background: url('/essencia/images/alpha-line.png') no-repeat top center;
  }

  .state {
    background: #ddd;
    font-size: 10px;
    margin-bottom: 3px;
    border: 1px solid #000;
    border-radius: 5px;
    padding: 5px;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: break-word;
    cursor: hand;
  }

  .plan-month {
    border-bottom: 1px dashed red;
    margin-top: 30px;
    text-align: right;
    font-weight: bold;
    font-size: 10px;
  }

  .plan-status {
    border-bottom: 3px dashed blue;
    margin-top: 180px;
    text-align: right;
    font-weight: bold;
    font-style: italic;
    font-size: 10px;
  }
</style>
<script>
Date.prototype.format = function(f) {
    if (!this.valueOf()) return " ";
 
    var weekName = ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"];
    var d = this;
     
    return f.replace(/(yyyy|yy|MM|dd|E|hh|mm|ss|a\/p)/gi, function($1) {
        switch ($1) {
            case "yyyy": return d.getFullYear();
            case "yy": return (d.getFullYear() % 1000).zf(2);
            case "MM": return (d.getMonth() + 1).zf(2);
            case "dd": return d.getDate().zf(2);
            case "E": return weekName[d.getDay()];
            case "HH": return d.getHours().zf(2);
            case "hh": return ((h = d.getHours() % 12) ? h : 12).zf(2);
            case "mm": return d.getMinutes().zf(2);
            case "ss": return d.getSeconds().zf(2);
            case "a/p": return d.getHours() < 12 ? "오전" : "오후";
            default: return $1;
        }
    });
};
 
String.prototype.string = function(len){var s = '', i = 0; while (i++ < len) { s += this; } return s;};
String.prototype.zf = function(len){return "0".string(len - this.length) + this;};
Number.prototype.zf = function(len){return this.toString().zf(len);};

function monthDiff(d1, d2) {
    var months;
    months = (d2.getFullYear() - d1.getFullYear()) * 12;
    months -= d1.getMonth() + 1;
    months += d2.getMonth();
    return months <= 0 ? 0 : months;
}


</script>
   
   <div>
  		<button>Planning</button>
  		<button>Monitoring</button>
	<div>
     
              <div id="plan-month" style="position:absolute;z-index:100;top:0;left:0;width:100%;height:600px;">
				  <div class="plan-month"><span id="start-date"
				        style="border:1px solid #555;background:#555;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">S</span>
				  </div>
				  <div id="plan-month-gen">
				  </div>
				  <!--
				  <div class="plan-month"><span
				        style="border:1px solid #555;background:#555;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">August</span>
				  </div>
				  <div class="plan-month"><span
				        style="border:1px solid #555;background:#555;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">September</span>
				  </div>
				  <div class="plan-month"><span
				        style="border:1px solid #555;background:#555;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">October</span>
				  </div>
				  -->
				  <div class="plan-month"><span id="end-date"
				        style="border:1px solid #555;background:#555;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">E</span>
				  </div>
				</div>
				
				<div id="plan-status" style="position:absolute;z-index:100;top:0;left:0;width:100%;height:600px;">
				  <div class="plan-status"><span
				        style="border:1px solid blue;background:blue;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">Now</span>
				  </div>
				  <div class="plan-status"><span
				        style="border:1px solid blue;background:blue;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">To-Do</span>
				  </div>
				</div>
				
				
				<div style="margin:auto;position:absolute;z-index:199;">
				  <table cellpadding="5">
				    <thead>
				    <tr>
				      <td></td>
				      <td></td>
				      <td></td>
				    </tr>
				    </thead>
				    <tbody>
				    <tr>
				      <td>
				
				        <div class="concern-cover-2">
				          <div class="concern-header">Customer</div>
				          <div class="concern-body">
				            <div class="alpha-cover">
				              <div class="alpha-title">Stakeholders</div>
				              <div id="alpha-1" class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[0] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-1-state-<%= idx %>" index="<%= idx %>" alapha-index="0" class="state" onclick="" data-toggle="tooltip"
				                     onmouseover="$(this).tooltip('show')"
				                     title="2015-01-21" plan-date="2015-01-21"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				            <div class="alpha-cover">
				              <div class="alpha-title">Opportunity</div>
				              <div class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[1] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-2-state-<%= idx %>" index="<%= idx %>"
				                     class="state"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				          </div>
				        </div>
				
				      </td>
				      <td>
				
				        <div class="concern-cover-2">
				          <div class="concern-header">Solution</div>
				          <div class="concern-body">
				            <div class="alpha-cover">
				              <div class="alpha-title">Requirements</div>
				              <div class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[2] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-3-state-<%= idx %>" index="<%= idx %>"
				                     class="state"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				            <div class="alpha-cover">
				              <div class="alpha-title">Software System</div>
				              <div class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[3] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-4-state-<%= idx %>" index="<%= idx %>"
				                     class="state"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				          </div>
				        </div>
				
				      </td>
				      <td>
				
				        <div class="concern-cover-3">
				          <div class="concern-header">Endeavour</div>
				          <div class="concern-body">
				            <div class="alpha-cover">
				              <div class="alpha-title">Work</div>
				              <div class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[4] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-5-state-<%= idx %>" index="<%= idx %>"
				                     class="state"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				            <div class="alpha-cover">
				              <div class="alpha-title">Team</div>
				              <div class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[5] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-6-state-<%= idx %>" index="<%= idx %>"
				                     class="state"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				            <div class="alpha-cover">
				              <div class="alpha-title">Way-of-Working</div>
				              <div class="alpha">
				                <div id="state-0"></div>
				                <% var stakeholder = value.alphas[6] %>
				                <% console.log(stakeholder.states.states); %>
				                <% for(idx in stakeholder.states.states){ %>
				                <div id="alpha-7-state-<%= idx %>" index="<%= idx %>"
				                     class="state"><%= (stakeholder.states.states[idx].name) %></div>
				                <% } %>
				                <div id="state-7"></div>
				              </div>
				            </div>
				          </div>
				        </div>
				
				      </td>
				    </tr>
				    </tbody>
				  </table>
				</div>
				
				
				<script>
				  
				  /* 대시보드 */
				  // 대시보드 일정 기준은 1px = 1day
				  // 대시보드 베이스라인 높이 + 1px 로 위치 계산
				  // 
			
				  var dashboard = {};
				  dashboard.alphas  = ['Stakeholders', 'Opportunity', 'Requirements', 'Software System', 'Work', 'Team', 'Way-of-Working'];
				  
				  
				  //대시보드 초기화
				  dashboard.init = function(){
				    
				    
				     this.setPlanDate();
				    
				    //알파 및 스테이트 이벤트 맵핑
				    for (var a = 1; a < 8; a++) {
				      for (var i = 0; i < 7; i++) {
				        $("#alpha-" + a + "-state-" + i).draggable({
				          containment: "parent",
				          start: function (event, ui) {
				          	dashboard.state.dragStart(this, event, ui);
				          },
				          stop: function (event, ui) {
				            dashboard.state.dragStop(this, event, ui);
				          }
				        });
				      }
				    };
				     
				     //날자 수정
				     $('.state').editable({
       					 url: '/post',
       					 title: 'Enter city, street and building #',
       					 value: {
          					  city: "Moscow", 
          					  street: "Lenina", 
          					  building: "15"
       					 }
    					});
    
				  };
				  
				  //대시보드 모드 변경 플랜/모니터링
				  dashboard.mode = function(mode){
				     //모드 변경
				  };
				  
				  //플랜일정 셋팅
				  dashboard.setPlanDate = function(){
				  		dashboard.startdate = new Date(2015,05,05); //시작
				  		dashboard.enddate   = new Date(2015,09,12); //종료
				  		//
				  		
				  		//일정
				    	$('#start-date').html(dashboard.startdate.format("dd/MM/yyyy"));
				    	$('#end-date').html(dashboard.enddate.format("dd/MM/yyyy"));
				    	
				    	//시작/종료 마진 설정
				    	$('#plan-month').css('top', 100);
				    	
				    	//시작과 종료일 사이의 기간 렌더링
				    	//months = monthDiff(dashboard.startdate, dashboard.enddate);
				    	//먼스 엘리먼트 추가
				    	//for(int i=0; i < months; i++){
				    		//$( "#plan-month-gen" ).append( '<div class="plan-month"><span style="border:1px solid #555;background:#555;color:#fff;border-top-left-radius:10px;border-top-right-radius:10px;padding:2px;padding-left:10px;padding-right:10px;">August</span> </div>' ) );
				    	//};
				    	//NOW/TODO 설정
				  };
				  
				  //대비소드 리사이즈(알파를 길게)
				  dashboard.resize = function (){
				   //시작 완료일자에 맞게 알파 높이 설정
				  		//$('.alpha').height(1965 * 1);
				  };
				  
				  //
				  dashboard.alpha = {};
				  
				  //스테이트  관련 함수 시작
				  dashboard.state = {};
				  //
				  dashboard.state.dragStart = function(obj, event, ui){
				    //포지션 검증
				            var index = parseInt($(obj).attr('index'));
				            //
				            var top = $(obj).offset().top;
				            var left = $(obj).offset().left;
				            $(obj).attr('orgTop', top);
				            $(obj).attr('orgLeft', left);
				            //위/아래 오브젝트 포지션 체크
				            // console.log($(obj).attr('index'));
				            $(obj).css("z-index", "5");
				            // $(obj).css( "border", "1px dotted red");
				  };
				  //
				  dashboard.state.dragStop = function(obj, event, ui){
				     //포지션 검증
				            var index = parseInt($(obj).attr('index'));
				
				            //변경된 날짜 팁 표시
				            $(obj).attr('title', '2015-02-05');
				            $(obj).tooltip('show');
				
				            var a;
				            var b;
				            var min_ele_top;
				            var max_ele_top;
				
				            //a = "#state-" + (index - 1);
				            //b = "#state-" + (index + 1);
				
				            // min_ele_top = $(a).offset().top;
				            // max_ele_top = $(b).offset().top;
				
				            // if((index+1) == 7){
				            // 	max_ele_top = 512;
				            // }
				
				            console.log("MIX:" + parseInt(min_ele_top));
				            console.log("NOW:" + parseInt(ui.offset.top));
				            console.log("MAX:" + parseInt(max_ele_top));
				
				            //검증
				            /*
				             if(parseInt(min_ele_top) >= parseInt(ui.offset.top) ||
				             parseInt(max_ele_top) <= parseInt(ui.offset.top)  ){
				             //$(obj).revert();
				             console.log('valid.');
				             var top = $(obj).attr('orgTop');
				             var left = $(obj).attr('orgLeft');
				             $(obj).offset({ top: top, left: left });
				             }
				             */
				            //
				            $(obj).css("z-index", "0");
				            $(obj).css("border", "1px solid black");
				            
				            
				            base_lie_top = 266;
				            //alert($(obj).offset().top);
				            next_day = parseInt($(obj).offset().top - base_lie_top);
				            var position_date = dashboard.startdate;
				            position_date.setDate(position_date.getDate() + next_day)
				            //alert(position_date); //드래그하여 위치한 일자
				  };
				  
				  //state를 날자에 따라 위치를 지정해 준다.
				  dashboard.state.setPosition = function(){
				    $( ".state" ).each(function(index, obj) {
				    	 var date = $(obj).attr('plan-date');
				   		//var a = 10; //start_date + plus_date;
				   		var base_line_top = 210;
				    	var top =  base_line_top + 30; //date값으로 부터 +day 계산
				    	$(obj).offset({ top: top });
				    });
				  };
				  
				  //
				  $(function() {
				    dashboard.init();
				    dashboard.state.setPosition();
				  });
				  
				</script>
        

