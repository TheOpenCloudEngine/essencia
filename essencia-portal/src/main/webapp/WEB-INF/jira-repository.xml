<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- ========================= TRANSLATION DEFINITION ========================= -->

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean class="org.mybatis.spring.MyBatisExceptionTranslator">
        <constructor-arg ref="dataSource"/>
        <constructor-arg value="false"/>
    </bean>

    <!-- ========================= MYBATIS DEFINITION ========================= -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/jira/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:jira/mybatis/**/*.xml"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <!-- ========================= TRANSACTION DEFINITION ========================= -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <constructor-arg type="org.springframework.transaction.PlatformTransactionManager"
                         ref="transactionManager"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:config>
        <aop:advisor pointcut="execution(* *..*Service.*(..))" advice-ref="txAdvice"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- ========================= THREAD POOL DEFINITION ========================= -->

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="6"/>
        <property name="maxPoolSize" value="6"/>
        <property name="WaitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="pooledDataSource"/>
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="sqlPrefix" value="[SQL]  "/>
            </bean>
        </property>
    </bean>

    <bean id="pooledDataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${codi.jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${codi.jdbc.url}"/>
        <property name="username" value="${codi.jdbc.username}"/>
        <property name="password" value="${codi.jdbc.password}"/>
        <property name="connectionTestQuery" value="${codi.jdbc.validationQuery}"/>
        <property name="registerMbeans" value="true"/>
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
                <prop key="useServerPrepStmts">true</prop>
            </props>
        </property>
    </bean>


    <!--&lt;!&ndash; ============================================================= &ndash;&gt;-->
    <!--&lt;!&ndash; uEngine SpringConnectionFactory setDataSource(DataSource) &ndash;&gt;-->
    <!--&lt;!&ndash; ============================================================= &ndash;&gt;-->
    <!--<bean class="org.uengine.codi.common.aoptx.ProcessManagerDirtyCheckAdvice"/>-->


    <!--<bean id="springConnectionFactory"-->
          <!--class="org.uengine.codi.MetaworksUEngineSpringConnectionAdapter"></bean>-->

    <!--<bean id="processManagerBean" class="org.uengine.codi.CodiProcessManagerBean"-->
          <!--scope="request">-->
        <!--<property name="managedTransaction" value="true"/>-->
        <!--<property name="autoCloseConnection" value="false"/>-->
        <!--<property name="connectionFactory" ref="springConnectionFactory"/>-->
        <!--<aop:scoped-proxy/>-->
    <!--</bean>-->

    <!--<bean id="springConnectionFactoryForMetaworks" class="org.metaworks.spring.SpringConnectionFactory">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--<bean id="MetaworksRemoteService" class="org.uengine.codi.mw3.CodiMetaworksRemoteService"-->
          <!--scope="singleton">-->
        <!--<property name="connectionFactory" ref="springConnectionFactoryForMetaworks"/>-->
        <!--<property name="lowerCaseSQL" value="true"/>-->
    <!--</bean>-->

    <!--<bean class="org.metaworks.dao.TransactionAdvice">-->
        <!--<property name="connectionFactory" ref="springConnectionFactoryForMetaworks"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; ============================================================= &ndash;&gt;-->
    <!--&lt;!&ndash; Speciy Upload file method &ndash;&gt;-->
    <!--&lt;!&ndash; ============================================================= &ndash;&gt;-->

    <!--&lt;!&ndash; ============================================================= &ndash;&gt;-->
    <!--&lt;!&ndash; Process Codi Schedule Job and Task Executor &ndash;&gt;-->
    <!--&lt;!&ndash; ============================================================= &ndash;&gt;-->
    <!--<task:annotation-driven executor="codiExecutor" scheduler="codiScheduler"/>-->
    <!--<task:executor id="codiExecutor" pool-size="1"/>-->
    <!--<task:scheduler id="codiScheduler" pool-size="2"/>-->

    <!--<bean id="storage" class="org.uengine.modeling.resource.LocalFileStorage">-->
        <!--<property name="localBasePath" value="${codebase}"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;    <bean id="storage" class="org.uengine.modeling.resource.AmazonS3Storage">-->
            <!--<property name="amazonS3Bucket" value="${Amazon.S3.Bucket}"/>-->
            <!--<property name="awsAccessKey" value="${Amazon.AccessKeyID}"/>-->
            <!--<property name="awsSecretAccessKey" value="${Amazon.SecretAccessKey}"/>-->
        <!--</bean>&ndash;&gt;-->

    <!--<bean class="org.uengine.modeling.resource.ResourceManager" scope="singleton">-->
        <!--<property name="storage" ref="storage"/>-->
    <!--</bean>-->
</beans>